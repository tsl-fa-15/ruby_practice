# Project Euler: Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# def fibonacci_up_to_4_million
#   sum = 0
#   a = 1
#   b = 2
#   while b <= 4000000
#     if b % 2 == 0
#       puts b
#       sum = sum + b
#     end
#     fibonacci = a + b
#     a = b
#     b = fibonacci
#   end
#   puts "sum: #{sum}"
# end

# def fibonacci_up_to_4_million
#   fib_array = [1, 2]
#   sum = 2
#   for num in 2..1000
#     # num => 2
#     fib_array[num] = fib_array[num-1] + fib_array[num-2]
#     # fib_array => [1,2,?]
#     if fib_array[num] % 2 == 0 && fib_array[num] <= 4000000
#       sum += fib_array[num]
#     end
#   end
#   # puts fib_array
#   puts sum
# end

fibonacci_up_to_4_million
